Subsystem 1:
// defines pins numbers
const int trigPin = 9;
const int echoPin = 10;
const int trigPin1 = 5;
const int echoPin1 = 4;
// defines variables
long duration;
int distance;
long duration1;
int distance1;
#define LED_PIN 11
void setup()
{
  pinMode(LED_PIN, OUTPUT);
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  pinMode(trigPin1, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin1, INPUT); // Sets the echoPin as an Input
  Serial.begin(9600); // Starts the serial communication
}
void loop() {
  // Clears the trigPin
  digitalWrite(trigPin, LOW);
  digitalWrite(trigPin1, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  digitalWrite(trigPin1, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  digitalWrite(trigPin1, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  duration1 = pulseIn(echoPin1, HIGH);
  // Calculating the distance
  distance = duration * 0.034 / 2;
  distance1 = duration * 0.034 / 2;
  // Prints the distance on the Serial Monitor
  if (distance > 500) {
      digitalWrite(LED_PIN, HIGH);
  } else {
      digitalWrite(LED_PIN, LOW);
  }
  if (distance1 > 500) {
      digitalWrite(LED_PIN, HIGH);
  } else {
      digitalWrite(LED_PIN, LOW);
  }
  Serial.print("Distance: ");
  Serial.println(distance);
  Serial.print("Distance1: ");
  Serial.println(distance1);
}
